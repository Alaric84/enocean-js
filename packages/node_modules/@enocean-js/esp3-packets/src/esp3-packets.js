import { RadioERP1 } from '../../radio-erp1/src/radio-erp1.js'
import { CommonCommand } from '../../common-command/src/common-command.js'
import { Response } from './packet-types/Response.js'
// import RemoteManCommand from './packet-types/RemoteManCommand.js'
// import RadioSubTel from './packet-types/RadioSubTel.js'
// import SmartAckCommand from './packet-types/SmartAckCommand.js'
// const Transform = require('stream').Transform
import { Transform } from 'stream'
export * from '../../esp3-packet/src/esp3-packet.js'
// import Command24 from './packet-types/Command24.js'
// import {Event} from './packet-types/Event.js'
// import Radio802 from './packet-types/Radio802.js'
export * from '../../radio-erp1/src/radio-erp1.js'

export * from '../../common-command/src/common-command.js'
// import RadioERP2 from './packet-types/RadioERP2.js'
// import RadioMessage from './packet-types/RadioMessage.js'
export * from './packet-types/Response.js'


const packetTypes = {
  0x01: RadioERP1,
  0x02: Response,
  0x05: CommonCommand
}

class ESP3Transformer extends Transform {
  constructor (options) {
    super({ ...options, ...{ objectMode: true } })
  }
  _transform (chunk, encoding, cb) {
    var packet = chunk
    if (chunk.packetType in packetTypes) {
      packet = packetTypes[chunk.packetType].from(chunk)
    }
    this.push(packet)
    cb()
  }
}
export { ESP3Transformer }
