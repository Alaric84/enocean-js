import { ESP3Packet } from '../../../esp3-packet/src/esp3-packet.js'
export const Response = Object.create({})
Response.from = function (esp3Packet, typeDesc = {}) {
  const RETURN_CODE_LOCATION = 0
  const responseTypes = {
    0x00: 'RET_OK',
    0x01: 'RET_ERROR',
    0x02: 'RET_NOT_SUPPORTED',
    0x03: 'RET_WRONG_PARAM',
    0x04: 'RET_OPERATION_DENIED',
    0x05: 'RET_LOCK_SET',
    0x06: 'RET_BUFFER_TO_SMALL',
    0x07: 'RET_NO_FREE_BUFFER',
    0x82: 'FLASH_HW_ERROR',
    0x90: 'BASEID_OUT_OF_RANGE',
    0x91: 'BASEID_MAX_REACHED'
  }
  const packet = esp3Packet
  var res = Object.create({})
  if (typeDesc[packet.data[RETURN_CODE_LOCATION]]) {
    res = typeDesc[packet.data[RETURN_CODE_LOCATION]].reduce(ESP3Packet.fieldExtractor.bind(packet), res)
  }
  res.returnCode = packet.data[0]
  res.returnMsg = responseTypes[packet.data[0]]
  res.getRawPacket = function () {
    return packet.toString('hex')
  }
  return Object.freeze(res)
}
export default Response
