"main";let emptyPacket;_3f8‍.w("./EmptyPacketStructure.js",[["default",["emptyPacket"],function(v){emptyPacket=v}]]);let ESP3Packet;_3f8‍.w("./ESP3Packet.js",[["default",["ESP3Packet"],function(v){ESP3Packet=v}]]);let Command24;_3f8‍.w("./packet-types/Command24.js",[["default",["Command24"],function(v){Command24=v}]]);let CommonCommand;_3f8‍.w("./packet-types/CommonCommand.js",[["default",["CommonCommand"],function(v){CommonCommand=v}]]);let Event;_3f8‍.w("./packet-types/Event.js",[["default",["Event"],function(v){Event=v}]]);let Radio802;_3f8‍.w("./packet-types/Radio802.js",[["default",["Radio802"],function(v){Radio802=v}]]);let RadioERP1;_3f8‍.w("./packet-types/RadioERP1.js",[["default",["RadioERP1"],function(v){RadioERP1=v}]]);







const packetTypes = {
  0x00: ESP3Packet,
  0x01: RadioERP1,
  0x04: Event,
  0x05: CommonCommand,
  0x10: Radio802,
  0x11: Command24
}

ESP3Packet.from = function (input) {
  return new packetTypes[input]()
}
_3f8‍.g.console.log(ESP3Packet.from(0).constructor.name)
_3f8‍.g.console.log(ESP3Packet.from(1).constructor.name)
_3f8‍.g.console.log(ESP3Packet.from(4).constructor.name)
_3f8‍.g.console.log(ESP3Packet.from(5).constructor.name)
_3f8‍.g.console.log(ESP3Packet.from(16).constructor.name)
_3f8‍.g.console.log(ESP3Packet.from(17).constructor.name)
