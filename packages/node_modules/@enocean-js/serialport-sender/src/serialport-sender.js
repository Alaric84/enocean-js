import { ESP3Parser } from '../../serialport-parser/src/serialport-parser.js'
function SerialportSender (options) {
  const parser = options.parser || new ESP3Parser()
  const port = options.port
  port.pipe(parser)
  return {
    send (tel) {
      return new Promise((resolve, reject) => {
        const t1 = setTimeout(() => { reject(new Error('timeout')) }, 1000)
        const callback = data => {
          if (data.packetType === 2) {
            clearTimeout(t1)
            parser.removeListener('data', callback)
            parser.removeListener('error', errCallback)
            resolve(data)
          }
        }
        const errCallback = err => reject(err)
        parser.on('data', callback)
        parser.on('error', errCallback)
        port.write(Buffer.from(tel, 'hex'))
      })
    }
  }
}
export default SerialportSender
export { SerialportSender }
